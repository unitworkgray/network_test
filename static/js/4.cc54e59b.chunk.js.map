{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","withAuthRedirect","Component","this","props","isAuth","to","React","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","DialogElements","DialogData","map","MessageElement","MessageData","content","container","dialogs","messages","myMessage","values","sendMessage","newMessageBody","compose","connect","auth","dispatch","sendMessageCreator"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,oBAAsB,qCAAqC,kBAAoB,mCAAmC,uBAAyB,wCAAwC,WAAa,4BAA4B,cAAgB,iC,6ICE5eC,EAAmB,SAACC,GAS7B,OAT2C,4JAGvC,WACI,OAAKC,KAAKC,MAAMC,OAET,cAACH,EAAD,eAAeC,KAAKC,QAFI,cAAC,IAAD,CAAUE,GAAG,eAJT,GAEXC,IAAML,a,kFCO3BM,EARI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASR,GAAIG,EAAb,SAAoBL,EAAMW,UCDnBC,EAJC,SAACZ,GACb,OAAO,qBAAKO,UAAWC,IAAEC,OAAlB,SAA2BT,EAAMa,W,0CCEtCC,EAAcC,YAAiB,IActBC,cAAW,CAACC,KAAM,2BAAlBD,EAZQ,SAAChB,GAEpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXX,KAAK,iBAAiBY,YAAY,6HAAyBC,SAAU,CAACC,IAAUX,OAE3F,yJC0BGY,EAlCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAiBF,EAAMG,WAAWC,KAAI,SAAAtB,GAAM,OAAI,cAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAML,GAAIG,EAAOH,QAE1F0B,EAAiBL,EAAMM,YAAYF,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAMhF,OAAKb,EAAMC,OAIP,qBAAKM,UAAWC,IAAE0B,QAAlB,SACI,sBAAK3B,UAAWC,IAAE2B,UAAlB,UACI,qBAAK5B,UAAWC,IAAE4B,QAAlB,SACKP,IAEL,sBAAKtB,UAAWC,IAAE6B,SAAlB,UACI,8BACKL,IAEL,qBAAKzB,UAAWC,IAAE8B,UAAlB,SACI,cAAC,EAAD,CAAgBpB,SAlBhB,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOE,6BAGH,cAAC,IAAD,CAAUvC,GAAI,Y,iCCK7BwC,sBACXC,aAjBkB,SAAChB,GAEnB,MAAO,CACHC,YAAaD,EAAMC,YACnB3B,OAAQ0B,EAAMiB,KAAK3C,WAIF,SAAC4C,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAmBL,SAOpC5C,IAFW6C,CAGbhB","file":"static/js/4.cc54e59b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3RpId\",\"container\":\"Dialogs_container__2XXAZ\",\"dialog\":\"Dialogs_dialog__mzevH\",\"dialogs\":\"Dialogs_dialogs__jLU4f\",\"active\":\"Dialogs_active__1QvqQ\",\"messages\":\"Dialogs_messages__3Ogu1\",\"myMessage\":\"Dialogs_myMessage__xGwwl\",\"messages__container\":\"Dialogs_messages__container__GXH8C\",\"message__userName\":\"Dialogs_message__userName__2FLmb\",\"message__otherUserName\":\"Dialogs_message__otherUserName__3SBUh\",\"icon__user\":\"Dialogs_icon__user__1FMJJ\",\"message__text\":\"Dialogs_message__text__prlpc\"};","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n\r\n\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageBody\" placeholder=\"Введите свое сообщение\" validate={[required, maxLength50]}/>\r\n            </div>\r\n            <button>Отправить сообщение</button>\r\n        </form>)\r\n}\r\n\r\nexport default reduxForm ({form: 'dialog_add_message_form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props)=> {\r\n\r\n    let state = props.dialogsPage;\r\n    \r\n    let DialogElements = state.DialogData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    \r\n    let MessageElement = state.MessageData.map(message => <Message message={message.message} />);\r\n\r\n    let addNewMessage = (values)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n\r\n    return(\r\n        <div className={s.content}>\r\n            <div className={s.container}>\r\n                <div className={s.dialogs}>\r\n                    {DialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        {MessageElement}\r\n                    </div>\r\n                    <div className={s.myMessage}>\r\n                        <AddMessageForm onSubmit={addNewMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport {sendMessageCreator} from '../../redux/dialogs_reducer';\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}